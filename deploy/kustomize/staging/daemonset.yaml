apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: sealos-nm-agent
    app.kubernetes.io/name: serviceaccount
    app.kubernetes.io/part-of: sealos-nm-agent
  name: sealos-nm-agent-sa
  namespace: sealos-nm-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: sealos-nm-agent-role
rules:
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices/status
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - get      
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pod/status
  verbs:
  - get      
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: sealos-nm-agent
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: sealos-nm-agent    
  name: sealos-nm-agent-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: sealos-nm-agent-role
subjects:
- kind: ServiceAccount
  name: sealos-nm-agent-sa
  namespace: sealos-nm-system
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: daemon
spec:
  template:
    metadata:
    spec:
      serviceAccountName: sealos-nm-agent-sa
      tolerations:
      - key: node-role.kubernetes.io/control-plane
        operator: Exists
        effect: NoSchedule
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      containers:
      - image: agent-daemon:latest
        imagePullPolicy: IfNotPresent
        name: agent-daemon
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 250m
            memory: 64Mi
        env:
        - name: DB_URI
          valueFrom:
            secretKeyRef:
              key: db_uri
              name: secret
              optional: false
        envFrom:
        - configMapRef:
            name: agent-env
        securityContext:
          capabilities:
            add:
            - ALL
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      volumes:
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: Directory
  updateStrategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 50%
    type: RollingUpdate

